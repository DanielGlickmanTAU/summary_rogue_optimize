import matplotlib.pyplot as plt

rouges_beam_xsum = [0.21764443806844233, 0.23914945703973772, 0.2512077030587507, 0.26118331100149395,
                    0.26970230051575356,
                    0.2771861690891295, 0.28144864968438593, 0.2863886819401525, 0.2899088740877941, 0.2935384526520924,
                    0.2965712581025295, 0.2987538407203418, 0.3017192980350092, 0.30398091894043927, 0.3073456139502892,
                    0.3087705787910595, 0.3107663997502069, 0.31191297126793366, 0.31332944233439314,
                    0.3152286966862959,
                    0.31684864783816136, 0.31814119030866883, 0.3199373874236004, 0.32135856142804886,
                    0.3222758567311258,
                    0.3242193711895533, 0.32563787646369985, 0.3266230682455073, 0.3280759737232229, 0.3294508520278669,
                    0.33056851674969595, 0.33122873384041285]
avg_beam_xsum = 0.20586906670857139

rouge_p_xsum = [0.21629893969497413, 0.22112185237848006, 0.22467714208032097, 0.22659044269369355, 0.2274372690504712,
                0.2285594252038004, 0.22932472983905428, 0.2300684646873509, 0.23120706401237318, 0.23184742950503523,
                0.23235863984064709, 0.23300008839335343, 0.23348799543496804, 0.23372408821486942, 0.23403496325229028,
                0.23453655157839448, 0.2347995935577514, 0.23485015398660125, 0.2352913330750845, 0.2353870496698112,
                0.23552904085435558, 0.2356811180888184, 0.2360245469010305, 0.23602786255089786, 0.23630064102398493,
                0.2364782421410491, 0.23666804530075655, 0.23698346208873816, 0.2372625796288313, 0.23764824294212616,
                0.23769463388967993, 0.23786592189763672, 0.23788865502432524, 0.23819347911594435, 0.23821806092934603,
                0.23836895607001102, 0.23838346322489742, 0.23847825651702653, 0.23851220459509231, 0.23857626179692043,
                0.23873389546740592, 0.23879796810500803, 0.23885115550900185, 0.23893662559447193, 0.23894528360312994,
                0.23903769709291614, 0.23921339010914067, 0.23928970080987536, 0.23943395757437466, 0.2394680659346784,
                0.23950607269143517, 0.2395439044761874, 0.23954787273015568, 0.23963490095817225, 0.23971202105646122,
                0.239889280958006, 0.24000056076007528, 0.24007051732105908, 0.2401833680368469, 0.24019079525015646,
                0.24037676632607471, 0.24037676632607471, 0.24040149693904064, 0.2405298270487634]

avg_p_xsum = 0.21539051832804318

rouges_beam_cnn = [0.1323015357040987, 0.1419974361005542, 0.14858300798587665, 0.15348313841312758,
                   0.15682571844200885, 0.16031342468295098, 0.16330788079940906, 0.1652473634476248,
                   0.16720739722191463, 0.16894772462313187, 0.17092068238023708, 0.17220159645057556,
                   0.17333174785948677, 0.17451078656747143, 0.1752276259544574, 0.17634872245976377,
                   0.17730150938802183, 0.1784828563976362, 0.1790738912860633, 0.17983858898376023,
                   0.18046936183635323, 0.18109207143739756, 0.18196145862606306, 0.18248708267673683,
                   0.18313260862933986, 0.18367236166627976, 0.18456184149565757, 0.18541256148311708,
                   0.18609287891061493, 0.18687241274610708, 0.1878063345154296, 0.18831815928895845]
rouge_average_cnn_p = 0.13171054025169493

rouges_p_cnn = [0.12842394822716302, 0.14116148700537498, 0.14839513583475725, 0.15469512263143478, 0.15762413454837143,
                0.16091968008309096, 0.16297106665795302, 0.16472563736252993, 0.16619492895743918, 0.16773743782994746,
                0.1686770361610338, 0.1702399129854317, 0.17102953336309204, 0.17212867346677987, 0.17260266871718438,
                0.17351865893936144, 0.1741960350246393, 0.17520446830239952, 0.17581648954502319, 0.17620640420728909,
                0.17674634749028884, 0.17743220551870947, 0.17810378952278708, 0.17875357886235915, 0.17902568862223825,
                0.17921278813330369, 0.1797729092289473, 0.18034426578895008, 0.18069063751005415, 0.18116395564765425,
                0.1816395958344728, 0.18205187098571202, 0.1823178494371303, 0.18256706455657726, 0.18280509433434294,
                0.1831732242929357, 0.18330456078196708, 0.18363441301777544, 0.18416664509615982, 0.18426665273242118,
                0.18475052952829865, 0.18499206569166318, 0.18523765355244629, 0.18557144184881408, 0.18566795761492674,
                0.18585285606799767, 0.18600227929252577, 0.1862546358501169, 0.18641016501770907, 0.18648498212512468,
                0.1867556928880401, 0.18705097318794728, 0.1871535591865988, 0.18724577608269016, 0.18740350495520752,
                0.18759218659765342, 0.18767228966745075, 0.187881619028397, 0.18807805668825273, 0.1881279506472727,
                0.18819289970759903, 0.1883647274199662, 0.18846957637005962, 0.18860594591680757]
rouge_average_cnn_p = 0.12773581071300555


def plot(title, sampling, rouges_at_k, avg=None):
    x = [i + 1 for i in range(len(rouges_at_k))]
    plt.plot(x, rouges_at_k, label=sampling.lower())
    if avg:
        plt.plot(x, [avg for i in range(len(rouges_at_k))], label='average')
    plt.title(title + ' ' + sampling)
    plt.xlabel('#Beams')
    plt.ylabel("ROUGE of best beam")
    plt.legend()
    plt.show()


plot('XSUM', 'P Sampling', rouge_p_xsum)
plot('XSUM', 'Beam Search', rouges_beam_xsum)

plot('CNN\Daily', 'P Sampling', rouges_p_cnn)
plot('CNN\Daily', 'Beam Search', rouges_beam_cnn)
